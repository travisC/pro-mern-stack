{"version":3,"sources":["webpack:///./src/IssueAddNavItem.jsx?4bb5"],"names":["IssueAddNavItem","Component","constructor","props","state","showing","showModal","bind","hideModal","submit","setState","e","preventDefault","form","document","forms","issueAdd","newIssue","owner","value","title","status","created","Date","fetch","method","headers","body","JSON","stringify","then","response","ok","json","updatedIssue","router","push","_id","error","showError","message","catch","err","render","propTypes","PropTypes","object","func","isRequired"],"mappings":"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","file":"0.57afa8c762f183f23487.hot-update.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\nimport { NavItem, Glyphicon, Modal, Form, FormGroup, FormControl, ControlLabel,\n  Button, ButtonToolbar } from 'react-bootstrap';\n\nclass IssueAddNavItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showing: false,\n    };\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  showModal() {\n    this.setState({ showing: true });\n  }\n\n  hideModal() {\n    this.setState({ showing: false });\n  }\n\n  submit(e) {\n    e.preventDefault();\n    this.hideModal();\n    const form = document.forms.issueAdd;\n    const newIssue = {\n      owner: form.owner.value, title: form.title.value,\n      status: 'New', created: new Date(),\n    };\n    fetch('/api/issues', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newIssue),\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(updatedIssue => {\n          this.props.router.push(`/issues/${updatedIssue._id}`);\n        });\n      } else {\n        response.json().then(error => {\n          this.props.showError(`Failed to add issue: ${error.message}`);\n        });\n      }\n    }).catch(err => {\n      this.props.showError(`Error in sending data to server: ${err.message}`);\n    });\n  }\n\n  render() {\n    return (\n      <NavItem onClick={this.showModal}><Glyphicon glyph=\"plus\" /> Create Issue\n        <Modal keyboard show={this.state.showing} onHide={this.hideModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Create Issue</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form name=\"issueAdd\">\n              <FormGroup>\n                <ControlLabel>Title</ControlLabel>\n                <FormControl name=\"title\" autoFocus />\n              </FormGroup>\n              <FormGroup>\n                <ControlLabel>Owner</ControlLabel>\n                <FormControl name=\"owner\" />\n              </FormGroup>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <ButtonToolbar>\n              <Button type=\"button\" bsStyle=\"primary\" onClick={this.submit}>Submit</Button>\n              <Button bsStyle=\"link\" onClick={this.hideModal}>Cancel</Button>\n            </ButtonToolbar>\n          </Modal.Footer>\n        </Modal>\n      </NavItem>\n    );\n  }\n}\n\nIssueAddNavItem.propTypes = {\n  router: React.PropTypes.object,\n  showError: React.PropTypes.func.isRequired,\n};\n\nexport default withRouter(IssueAddNavItem);\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAddNavItem.jsx"],"sourceRoot":""}