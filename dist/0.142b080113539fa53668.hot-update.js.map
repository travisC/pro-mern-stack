{"version":3,"sources":["webpack:///./src/IssueReport.jsx?c906"],"names":["statuses","StatRow","props","owner","map","status","index","counts","propTypes","PropTypes","string","isRequired","object","IssueReport","Component","dataFetcher","urlBase","location","search","fetch","then","response","ok","json","error","Promise","reject","data","constructor","context","stats","initialState","state","toastVisible","toastMessage","toastType","setFilter","bind","showError","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","oldQuery","query","newQuery","effort_gte","effort_lte","router","push","pathname","message","setState","catch","err","render","Object","keys","contextTypes"],"mappings":"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","file":"0.142b080113539fa53668.hot-update.js","sourcesContent":["import React from 'react';\nimport { Panel, Table } from 'react-bootstrap';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport Toast from './Toast.jsx';\n\nconst statuses = ['New', 'Open', 'Assigned', 'Fixed', 'Verified', 'Closed'];\n\nconst StatRow = (props) => (\n  <tr>\n    <td>{props.owner}</td>\n    {statuses.map((status, index) => (<td key={index}>{props.counts[status]}</td>))}\n  </tr>\n);\n\nStatRow.propTypes = {\n  owner: React.PropTypes.string.isRequired,\n  counts: React.PropTypes.object.isRequired,\n};\n\nexport default class IssueReport extends React.Component {\n  static dataFetcher({ urlBase, location }) {\n    const search = location.search ? `${location.search}&_summary` : '?_summary';\n    return fetch(`${urlBase || ''}/api/issues${search}`).then(response => {\n      if (!response.ok) return response.json().then(error => Promise.reject(error));\n      return response.json().then(data => ({ IssueReport: data }));\n    });\n  }\n\n  constructor(props, context) {\n    super(props, context);\n    const stats = context.initialState.IssueReport ? context.initialState.IssueReport : {};\n    this.state = {\n      stats,\n      toastVisible: false, toastMessage: '', toastType: 'success',\n    };\n    this.setFilter = this.setFilter.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const oldQuery = prevProps.location.query;\n    const newQuery = this.props.location.query;\n    if (oldQuery.status === newQuery.status\n        && oldQuery.effort_gte === newQuery.effort_gte\n        && oldQuery.effort_lte === newQuery.effort_lte) {\n      return;\n    }\n    this.loadData();\n  }\n\n  setFilter(query) {\n    this.props.router.push({ pathname: this.props.location.pathname, query });\n  }\n\n  showError(message) {\n    this.setState({ toastVisible: true, toastMessage: message, toastType: 'danger' });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  loadData() {\n    IssueReport.dataFetcher({ location: this.props.location })\n    .then(data => {\n      this.setState({ stats: data.IssueReport });\n    }).catch(err => {\n      this.showError(`Error in fetching data from server: ${err}`);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Panel collapsible header=\"Filter\">\n          <IssueFilter setFilter={this.setFilter} initFilter={this.props.location.query} />\n        </Panel>\n        <Table bordered condensed hover responsive>\n          <thead>\n            <tr>\n              <th></th>\n              {statuses.map((status, index) => <td key={index}>{status}</td>)}\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(this.state.stats).map((owner, index) =>\n              <StatRow key={index} owner={owner} counts={this.state.stats[owner]} />\n            )}\n          </tbody>\n        </Table>\n        <Toast\n          showing={this.state.toastVisible} message={this.state.toastMessage}\n          onDismiss={this.dismissToast} bsStyle={this.state.toastType}\n        />\n      </div>\n    );\n  }\n}\n\nIssueReport.propTypes = {\n  location: React.PropTypes.object.isRequired,\n  router: React.PropTypes.object,\n};\n\nIssueReport.contextTypes = {\n  initialState: React.PropTypes.object,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueReport.jsx"],"sourceRoot":""}