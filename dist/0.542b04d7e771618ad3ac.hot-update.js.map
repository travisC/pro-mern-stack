{"version":3,"sources":["webpack:///./src/IssueEdit.jsx?74ff"],"names":["IssueEdit","Component","dataFetcher","params","urlBase","fetch","id","then","response","ok","json","error","Promise","reject","data","constructor","props","context","issue","initialState","created","Date","completionDate","_id","title","status","owner","effort","state","invalidFields","showingValidation","dismissValidation","bind","showValidation","onChange","onValidityChange","onSubmit","componentDidMount","loadData","componentDidUpdate","prevProps","event","convertedValue","Object","assign","value","undefined","target","name","setState","valid","preventDefault","keys","length","method","headers","body","JSON","stringify","updatedIssue","showSuccess","showError","message","catch","err","render","validationMessage","toDateString","user","signedIn","propTypes","PropTypes","object","isRequired","func","contextTypes","IssueEditWithToast"],"mappings":"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","file":"0.542b04d7e771618ad3ac.hot-update.js","sourcesContent":["import React from 'react';\nimport { FormGroup, FormControl, ControlLabel, ButtonToolbar, Button,\n  Panel, Form, Col, Alert } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport NumInput from './NumInput.jsx';\n\nimport DateInput from './DateInput.jsx';\nimport withToast from './withToast.jsx';\n\nclass IssueEdit extends React.Component {\n  static dataFetcher({ params, urlBase }) {\n    return fetch(`${urlBase || ''}/api/issues/${params.id}`).then(response => {\n      if (!response.ok) return response.json().then(error => Promise.reject(error));\n      return response.json().then(data => ({ IssueEdit: data }));\n    });\n  }\n\n  constructor(props, context) {\n    super(props, context);\n    let issue;\n    if (context.initialState.IssueEdit) {\n      issue = context.initialState.IssueEdit;\n      issue.created = new Date(issue.created);\n      issue.completionDate = issue.completionDate != null ?\n        new Date(issue.completionDate) : null;\n    } else {\n      issue = {\n        _id: '', title: '', status: '', owner: '', effort: null,\n        completionDate: null, created: null,\n      };\n    }\n    this.state = {\n      issue,\n      invalidFields: {}, showingValidation: false,\n    };\n    this.dismissValidation = this.dismissValidation.bind(this);\n    this.showValidation = this.showValidation.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onValidityChange = this.onValidityChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.id !== this.props.params.id) {\n      this.loadData();\n    }\n  }\n\n  onChange(event, convertedValue) {\n    const issue = Object.assign({}, this.state.issue);\n    const value = (convertedValue !== undefined) ? convertedValue : event.target.value;\n    issue[event.target.name] = value;\n    this.setState({ issue });\n  }\n\n  onValidityChange(event, valid) {\n    const invalidFields = Object.assign({}, this.state.invalidFields);\n    if (!valid) {\n      invalidFields[event.target.name] = true;\n    } else {\n      delete invalidFields[event.target.name];\n    }\n    this.setState({ invalidFields });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.showValidation();\n\n    if (Object.keys(this.state.invalidFields).length !== 0) {\n      return;\n    }\n\n    fetch(`/api/issues/${this.props.params.id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.issue),\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(updatedIssue => {\n          updatedIssue.created = new Date(updatedIssue.created);\n          if (updatedIssue.completionDate) {\n            updatedIssue.completionDate = new Date(updatedIssue.completionDate);\n          }\n          this.setState({ issue: updatedIssue });\n          this.props.showSuccess('Updated issue successfully.');\n        });\n      } else {\n        response.json().then(error => {\n          this.props.showError(`Failed to update issue: ${error.message}`);\n        });\n      }\n    }).catch(err => {\n      this.props.showError(`Error in sending data to server: ${err.message}`);\n    });\n  }\n\n  loadData() {\n    IssueEdit.dataFetcher({ params: this.props.params })\n    .then(data => {\n      const issue = data.IssueEdit;\n      issue.created = new Date(issue.created);\n      issue.completionDate = issue.completionDate != null ?\n        new Date(issue.completionDate) : null;\n      this.setState({ issue });\n    }).catch(err => {\n      this.props.showError(`Error in fetching data from server: ${err.message}`);\n    });\n  }\n\n  showValidation() {\n    this.setState({ showingValidation: true });\n  }\n\n  dismissValidation() {\n    this.setState({ showingValidation: false });\n  }\n\n  render() {\n    const issue = this.state.issue;\n    let validationMessage = null;\n    if (Object.keys(this.state.invalidFields).length !== 0 && this.state.showingValidation) {\n      validationMessage = (\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n          Please correct invalid fields before submitting.\n        </Alert>\n      );\n    }\n    return (\n      <Panel header=\"Edit Issue\">\n        <Form horizontal onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>ID</Col>\n            <Col sm={9}>\n              <FormControl.Static>{issue._id}</FormControl.Static>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Created</Col>\n            <Col sm={9}>\n              <FormControl.Static>\n                {issue.created ? issue.created.toDateString() : ''}\n              </FormControl.Static>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Status</Col>\n            <Col sm={9}>\n              <FormControl\n                componentClass=\"select\" name=\"status\" value={issue.status}\n                onChange={this.onChange}\n              >\n                <option value=\"New\">New</option>\n                <option value=\"Open\">Open</option>\n                <option value=\"Assigned\">Assigned</option>\n                <option value=\"Fixed\">Fixed</option>\n                <option value=\"Verified\">Verified</option>\n                <option value=\"Closed\">Closed</option>\n              </FormControl>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Owner</Col>\n            <Col sm={9}>\n              <FormControl name=\"owner\" value={issue.owner} onChange={this.onChange} />\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Effort</Col>\n            <Col sm={9}>\n              <FormControl\n                componentClass={NumInput} name=\"effort\"\n                value={issue.effort} onChange={this.onChange}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup validationState={this.state.invalidFields.completionDate ? 'error' : null}>\n            <Col componentClass={ControlLabel} sm={3}>Completion Date</Col>\n            <Col sm={9}>\n              <FormControl\n                componentClass={DateInput} name=\"completionDate\"\n                value={issue.completionDate} onChange={this.onChange}\n                onValidityChange={this.onValidityChange}\n              />\n              <FormControl.Feedback />\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Title</Col>\n            <Col sm={9}>\n              <FormControl name=\"title\" value={issue.title} onChange={this.onChange} />\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col smOffset={3} sm={6}>\n              <ButtonToolbar>\n                <Button bsStyle=\"primary\" type=\"submit\" disabled={!this.props.user.signedIn}>\n                  Submit\n                </Button>\n                <LinkContainer to=\"/issues\">\n                  <Button bsStyle=\"link\">Back</Button>\n                </LinkContainer>\n              </ButtonToolbar>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col smOffset={3} sm={9}>{validationMessage}</Col>\n          </FormGroup>\n        </Form>\n      </Panel>\n    );\n  }\n}\n\nIssueEdit.propTypes = {\n  params: React.PropTypes.object.isRequired,\n  showSuccess: React.PropTypes.func.isRequired,\n  showError: React.PropTypes.func.isRequired,\n  user: React.PropTypes.object.isRequired,\n};\n\nIssueEdit.contextTypes = {\n  initialState: React.PropTypes.object,\n};\n\nconst IssueEditWithToast = withToast(IssueEdit);\nIssueEditWithToast.dataFetcher = IssueEdit.dataFetcher;\n\nexport default IssueEditWithToast;\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueEdit.jsx"],"sourceRoot":""}