{"version":3,"sources":["webpack:///./src/IssueEdit.jsx?74ff"],"names":["IssueEdit","Component","dataFetcher","params","urlBase","fetch","id","then","response","ok","json","error","Promise","reject","data","constructor","props","context","issue","initialState","created","Date","completionDate","_id","title","status","owner","effort","state","invalidFields","showingValidation","toastVisible","toastMessage","toastType","dismissValidation","bind","showValidation","showSuccess","showError","dismissToast","onChange","onValidityChange","onSubmit","componentDidMount","loadData","componentDidUpdate","prevProps","event","convertedValue","Object","assign","value","undefined","target","name","setState","valid","preventDefault","keys","length","method","headers","body","JSON","stringify","updatedIssue","message","catch","err","render","validationMessage","toDateString","propTypes","PropTypes","object","isRequired","contextTypes"],"mappings":"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","file":"0.07c71dc822e57575d159.hot-update.js","sourcesContent":["import React from 'react';\nimport { FormGroup, FormControl, ControlLabel, ButtonToolbar, Button,\n  Panel, Form, Col, Alert } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport NumInput from './NumInput.jsx';\n\nimport DateInput from './DateInput.jsx';\nimport Toast from './Toast.jsx';\n\nexport default class IssueEdit extends React.Component {\n  static dataFetcher({ params, urlBase }) {\n    return fetch(`${urlBase || ''}/api/issues/${params.id}`).then(response => {\n      if (!response.ok) return response.json().then(error => Promise.reject(error));\n      return response.json().then(data => ({ IssueEdit: data }));\n    });\n  }\n\n  constructor(props, context) {\n    super(props, context);\n    let issue;\n    if (context.initialState.IssueEdit) {\n      issue = context.initialState.IssueEdit;\n      issue.created = new Date(issue.created);\n      issue.completionDate = issue.completionDate != null ?\n        new Date(issue.completionDate) : null;\n    } else {\n      issue = {\n        _id: '', title: '', status: '', owner: '', effort: null,\n        completionDate: null, created: null,\n      };\n    }\n    this.state = {\n      issue,\n      invalidFields: {}, showingValidation: false,\n      toastVisible: false, toastMessage: '', toastType: 'success',\n    };\n    this.dismissValidation = this.dismissValidation.bind(this);\n    this.showValidation = this.showValidation.bind(this);\n    this.showSuccess = this.showSuccess.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onValidityChange = this.onValidityChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.params.id !== this.props.params.id) {\n      this.loadData();\n    }\n  }\n\n  onChange(event, convertedValue) {\n    const issue = Object.assign({}, this.state.issue);\n    const value = (convertedValue !== undefined) ? convertedValue : event.target.value;\n    issue[event.target.name] = value;\n    this.setState({ issue });\n  }\n\n  onValidityChange(event, valid) {\n    const invalidFields = Object.assign({}, this.state.invalidFields);\n    if (!valid) {\n      invalidFields[event.target.name] = true;\n    } else {\n      delete invalidFields[event.target.name];\n    }\n    this.setState({ invalidFields });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.showValidation();\n\n    if (Object.keys(this.state.invalidFields).length !== 0) {\n      return;\n    }\n\n    fetch(`/api/issues/${this.props.params.id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.issue),\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(updatedIssue => {\n          updatedIssue.created = new Date(updatedIssue.created);\n          if (updatedIssue.completionDate) {\n            updatedIssue.completionDate = new Date(updatedIssue.completionDate);\n          }\n          this.setState({ issue: updatedIssue });\n          this.showSuccess('Updated issue successfully.');\n        });\n      } else {\n        response.json().then(error => {\n          this.showError(`Failed to update issue: ${error.message}`);\n        });\n      }\n    }).catch(err => {\n      this.showError(`Error in sending data to server: ${err.message}`);\n    });\n  }\n\n  loadData() {\n    IssueEdit.dataFetcher({ params: this.props.params })\n    .then(data => {\n      const issue = data.IssueEdit;\n      issue.created = new Date(issue.created);\n      issue.completionDate = issue.completionDate != null ?\n        new Date(issue.completionDate) : null;\n      this.setState({ issue });\n    }).catch(err => {\n      this.showError(`Error in fetching data from server: ${err.message}`);\n    });\n  }\n\n  showValidation() {\n    this.setState({ showingValidation: true });\n  }\n\n  dismissValidation() {\n    this.setState({ showingValidation: false });\n  }\n\n  showSuccess(message) {\n    this.setState({ toastVisible: true, toastMessage: message, toastType: 'success' });\n  }\n\n  showError(message) {\n    this.setState({ toastVisible: true, toastMessage: message, toastType: 'danger' });\n  }\n\n  dismissToast() {\n    this.setState({ toastVisible: false });\n  }\n\n  render() {\n    const issue = this.state.issue;\n    let validationMessage = null;\n    if (Object.keys(this.state.invalidFields).length !== 0 && this.state.showingValidation) {\n      validationMessage = (\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n          Please correct invalid fields before submitting.\n        </Alert>\n      );\n    }\n    return (\n      <Panel header=\"Edit Issue\">\n        <Form horizontal onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>ID</Col>\n            <Col sm={9}>\n              <FormControl.Static>{issue._id}</FormControl.Static>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Created</Col>\n            <Col sm={9}>\n              <FormControl.Static>\n                {issue.created ? issue.created.toDateString() : ''}\n              </FormControl.Static>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Status</Col>\n            <Col sm={9}>\n              <FormControl\n                componentClass=\"select\" name=\"status\" value={issue.status}\n                onChange={this.onChange}\n              >\n                <option value=\"New\">New</option>\n                <option value=\"Open\">Open</option>\n                <option value=\"Assigned\">Assigned</option>\n                <option value=\"Fixed\">Fixed</option>\n                <option value=\"Verified\">Verified</option>\n                <option value=\"Closed\">Closed</option>\n              </FormControl>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Owner</Col>\n            <Col sm={9}>\n              <FormControl name=\"owner\" value={issue.owner} onChange={this.onChange} />\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Effort</Col>\n            <Col sm={9}>\n              <FormControl\n                componentClass={NumInput} name=\"effort\"\n                value={issue.effort} onChange={this.onChange}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup validationState={this.state.invalidFields.completionDate ? 'error' : null}>\n            <Col componentClass={ControlLabel} sm={3}>Completion Date</Col>\n            <Col sm={9}>\n              <FormControl\n                componentClass={DateInput} name=\"completionDate\"\n                value={issue.completionDate} onChange={this.onChange}\n                onValidityChange={this.onValidityChange}\n              />\n              <FormControl.Feedback />\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col componentClass={ControlLabel} sm={3}>Title</Col>\n            <Col sm={9}>\n              <FormControl name=\"title\" value={issue.title} onChange={this.onChange} />\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col smOffset={3} sm={6}>\n              <ButtonToolbar>\n                <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\n                <LinkContainer to=\"/issues\">\n                  <Button bsStyle=\"link\">Back</Button>\n                </LinkContainer>\n              </ButtonToolbar>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <Col smOffset={3} sm={9}>{validationMessage}</Col>\n          </FormGroup>\n        </Form>\n        <Toast\n          showing={this.state.toastVisible} message={this.state.toastMessage}\n          onDismiss={this.dismissToast} bsStyle={this.state.toastType}\n        />\n      </Panel>\n    );\n  }\n}\n\nIssueEdit.propTypes = {\n  params: React.PropTypes.object.isRequired,\n};\n\nIssueEdit.contextTypes = {\n  initialState: React.PropTypes.object,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueEdit.jsx"],"sourceRoot":""}