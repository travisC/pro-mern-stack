{"version":3,"sources":["webpack:///./server/server.js?268d"],"names":["app","use","static","json","db","get","req","res","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","_summary","undefined","limit","_limit","collection","find","toArray","then","issues","metadata","total_count","length","_metadata","records","catch","error","console","log","message","aggregate","$match","$group","_id","owner","count","$sum","results","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","result","insertedId","next","savedIssue","issueId","params","id","issue","put","updateOne","convertIssue","delete","deleteOne","deleteResult","n","setDb","newDb"],"mappings":"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","file":"0.16a853206a3f90dd2f61.hot-update.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport { ObjectId } from 'mongodb';\nimport Issue from './issue.js';\nimport renderedPageRouter from './renderedPageRouter.jsx';\n\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\nlet db;\n\napp.get('/api/issues', (req, res) => {\n  const filter = {};\n  if (req.query.status) filter.status = req.query.status;\n  if (req.query.effort_lte || req.query.effort_gte) filter.effort = {};\n  if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n  if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\n\n  if (req.query._summary === undefined) {\n    let limit = req.query.limit ? parseInt(req.query._limit, 10) : 20;\n    if (limit > 50) limit = 50;\n    db.collection('issues').find(filter).toArray()\n    .then(issues => {\n      const metadata = { total_count: issues.length };\n      res.json({ _metadata: metadata, records: issues });\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n  } else {\n    db.collection('issues').aggregate([\n      { $match: filter },\n      { $group: { _id: { owner: '$owner', status: '$status' }, count: { $sum: 1 } } },\n    ]).toArray()\n    .then(results => {\n\n    })\n    .catch(error => {\n      console.log(error);\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\n    });\n  }\n});\n\napp.post('/api/issues', (req, res) => {\n  const newIssue = req.body;\n  newIssue.created = new Date();\n  if (!newIssue.status) {\n    newIssue.status = 'New';\n  }\n\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result =>\n    db.collection('issues').find({ _id: result.insertedId }).limit(1)\n    .next()\n  )\n  .then(savedIssue => {\n    res.json(savedIssue);\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.get('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    issueId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n\n  db.collection('issues').find({ _id: issueId }).limit(1)\n  .next()\n  .then(issue => {\n    if (!issue) res.status(404).json({ message: `No such issue: ${issueId}` });\n    else res.json(issue);\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.put('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    issueId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n\n  const issue = req.body;\n  delete issue._id;\n\n  const err = Issue.validateIssue(issue);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').updateOne({ _id: issueId }, Issue.convertIssue(issue)).then(() =>\n    db.collection('issues').find({ _id: issueId }).limit(1)\n    .next()\n  )\n  .then(savedIssue => {\n    res.json(savedIssue);\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.delete('/api/issues/:id', (req, res) => {\n  let issueId;\n  try {\n    issueId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\n    return;\n  }\n\n  db.collection('issues').deleteOne({ _id: issueId }).then((deleteResult) => {\n    if (deleteResult.result.n === 1) res.json({ status: 'OK' });\n    else res.json({ status: 'Warning: object not found' });\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.use('/', renderedPageRouter);\n\nfunction setDb(newDb) {\n  db = newDb;\n}\n\nexport { app, setDb };\n\n\n\n// WEBPACK FOOTER //\n// ./server/server.js"],"sourceRoot":""}